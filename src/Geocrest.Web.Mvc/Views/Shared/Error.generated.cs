#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Geocrest.Web.Mvc.EmbeddedViews
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 1 "..\..\Views\Shared\Error.cshtml"
    using Geocrest.Web.Mvc;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Shared/Error.cshtml")]
    public partial class Error : System.Web.Mvc.WebViewPage<System.Web.Mvc.HandleErrorInfo>
    {
        public Error()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\Shared\Error.cshtml"
  
    ViewBag.Title = "An error has occurred...";
    // Setup the display information only if certain conditions are met
    // A non-null Model means that the request came from an MVC page as opposed to a WebApi request
    // When a WebApi request throws an error the BaseApplication's Application_Error event will populate
    // the display information instead of the following code.
    if (Model != null)
    {
        // Display detailed error messages
        if (Roles.Enabled && Roles.RoleExists(BaseApplication.AdminRole) && User.IsInRole(BaseApplication.AdminRole) &&
            BaseApplication.DebugVersions.Contains(BaseApplication.CurrentEnvironment))
        {
            ViewBag.Messages = "<strong>Message:</strong> " + Model.Exception.Message + "<br />" +
                (Model.Exception.InnerException != null ? "<strong>Inner Exception:</strong> " +
                Model.Exception.InnerException.Message : "") + "<br /><strong>Stack Trace:</strong> " +
                Model.Exception.StackTrace;
            ViewBag.ErrorCode = Model.Exception is HttpException ?
                (Model.Exception as HttpException).GetHttpCode().ToString() + " " : "500 ";
        }
        else
        {
            ViewBag.Messages = @"Unfortunately, something went wrong during your request. The issue has been logged and
we will fix it as soon as possible.";
            ViewBag.ErrorCode = "";
        }
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" class=\"container\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"col-md-12\"");

WriteLiteral(">\r\n            <h2");

WriteLiteral(" class=\"error\"");

WriteLiteral(">An error <code>");

            
            #line 33 "..\..\Views\Shared\Error.cshtml"
                                        Write(ViewBag.ErrorCode);

            
            #line default
            #line hidden
WriteLiteral("</code> has occurred during your request.</h2>\r\n            <p");

WriteLiteral(" class=\"well\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 35 "..\..\Views\Shared\Error.cshtml"
           Write(Html.Raw(ViewBag.Messages));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </p>\r\n        </div>\r\n    </div>\r\n</div>\r\n");

        }
    }
}
#pragma warning restore 1591
