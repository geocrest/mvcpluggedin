#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Geocrest.Web.Mvc.EmbeddedViews
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    
    #line 1 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
    using System.Net.Http.Headers;
    
    #line default
    #line hidden
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Geocrest.Web.Mvc;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Help/DisplayTemplates/Samples.cshtml")]
    public partial class Samples_ : System.Web.Mvc.WebViewPage<Dictionary<MediaTypeHeaderValue, object>>
    {
        public Samples_()
        {
        }
        public override void Execute()
        {
            
            #line 4 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
  
    // Group the samples into a single tab if they are the same.
    Dictionary<string, object> samples = Model.GroupBy(pair => pair.Value).ToDictionary(
        pair => String.Join(", ", pair.Select(m => m.Key.ToString()).ToArray()),
        pair => pair.Key);
    var mediaTypes = samples.Keys;
    bool isResponse = (bool)ViewData["isResponse"];

            
            #line default
            #line hidden
WriteLiteral("\r\n<div>\r\n");

            
            #line 13 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
    
            
            #line default
            #line hidden
            
            #line 13 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
     foreach (var mediaType in mediaTypes)
    {
        if (isResponse)
        {

            
            #line default
            #line hidden
WriteLiteral("            <h4");

WriteAttribute("id", Tuple.Create(" id=\"", 554), Tuple.Create("\"", 620)
            
            #line 17 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
, Tuple.Create(Tuple.Create("", 559), Tuple.Create<System.Object, System.Int32>(mediaType.Replace(", ","_").Replace("/","_").Replace("+","")
            
            #line default
            #line hidden
, 559), false)
);

WriteLiteral(" class=\"sample-header\"");

WriteLiteral(">");

            
            #line 17 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
                                                                                                    Write(mediaType);

            
            #line default
            #line hidden
WriteLiteral("</h4>\r\n");

            
            #line 18 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
        }
        else
        {

            
            #line default
            #line hidden
WriteLiteral("            <h4");

WriteLiteral(" class=\"sample-header\"");

WriteLiteral(">");

            
            #line 21 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
                                 Write(mediaType);

            
            #line default
            #line hidden
WriteLiteral("</h4>\r\n");

            
            #line 22 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        <a");

WriteLiteral(" href=\"#responseInformation\"");

WriteLiteral(" class=\"pop scroll\"");

WriteLiteral(">back to top <i");

WriteLiteral(" class=\"fa fa-arrow-up\"");

WriteLiteral("></i></a>\r\n");

WriteLiteral("        <div");

WriteLiteral(" class=\"sample-content\"");

WriteLiteral(">\r\n            <span><b>Sample:</b></span>\r\n");

            
            #line 26 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
            
            
            #line default
            #line hidden
            
            #line 26 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
              
        var sample = samples[mediaType];
        if (sample == null)
        {

            
            #line default
            #line hidden
WriteLiteral("            <p>Sample not available.</p>\r\n");

            
            #line 31 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
        }
        else
        {
            
            
            #line default
            #line hidden
            
            #line 34 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
       Write(Html.DisplayFor(s => sample));

            
            #line default
            #line hidden
            
            #line 34 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
                                         ;
        }
            
            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n");

            
            #line 38 "..\..\Views\Help\DisplayTemplates\Samples.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("</div>");

        }
    }
}
#pragma warning restore 1591
